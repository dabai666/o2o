<?php namespace YiZan\Services;
use YiZan\Models\ShopBrand;
use YiZan\Utils\Time;
use DB, Lang, Validator, App;

class ShopBrandService extends BaseService{
    public function getList($status = ''){
        $model = new ShopBrand();
        if($status == 1){
            $model = $model->where('status',1);
        }
        $data = $model->get();
        $data = $data ? $data->toArray() : array();
        return $data;
    }
    public function getListById($id){
        return ShopBrand::where('id',$id)->get()->toArray();
    }
    public function delete($id){
        $result = [
            'code'  => 0,
            'data'  => null,
            'msg'   => ""
        ];
        ShopBrand::whereIn('id',$id)->delete();
        return $result;
    }

    public function save($id,$name,$introduce,$status,$img,$url,$honorImg){
//        var_dump($id);die;
        $result = array(
            'code'  => 0,
            'data'  => null,
            'msg' => null,
        );
//        die($id);
        if($id && ($id > 0)){
            $msg = ShopBrand::where('name',$name)->get()->toArray();
            if(!$msg){
                $result['code'] = 1;
                $result['msg'] = '品牌编号不存在';  //添加成功
                return $result;
            }
//            if($msg[0]['name'] == $name){
//                $result['code'] = 2;
//                $result['msg'] = '品牌名称已经存在';  //添加成功
//                return $result;
//            }
            $tag = ShopBrand::find($id);
        }else{
            if(ShopBrand::where('name',$name)->get()->toArray()){
                $result['code'] = 12345644;
                $result['msg'] = '品牌名称已经存在';  //添加成功
                return $result;
            }
            $tag = new ShopBrand();
        }
        $tag->name = $name;
        $tag->introduce = $introduce;
        $tag->status = $status;
        $tag->img = $img;
        $tag->url = $url;
        $tag->honor_img = implode(',',$honorImg);
        if($id && ($id > 0)){

        }else{
            $tag->create_time = Time::toTime(Time::toDate(time()));
        }
        $tag->save();
        return $result;
    }

    private function getFirstCharter($str){
        if(empty($str)){return '';}
        $fchar=ord($str{0});
        if($fchar>=ord('A')&&$fchar<=ord('z')) return strtoupper($str{0});
        $s1=iconv('UTF-8','gb2312',$str);
        $s2=iconv('gb2312','UTF-8',$s1);
        $s=$s2==$str?$s1:$str;
        $asc=ord($s{0})*256+ord($s{1})-65536;
        if($asc>=-20319&&$asc<=-20284) return 'A';
        if($asc>=-20283&&$asc<=-19776) return 'B';
        if($asc>=-19775&&$asc<=-19219) return 'C';
        if($asc>=-19218&&$asc<=-18711) return 'D';
        if($asc>=-18710&&$asc<=-18527) return 'E';
        if($asc>=-18526&&$asc<=-18240) return 'F';
        if($asc>=-18239&&$asc<=-17923) return 'G';
        if($asc>=-17922&&$asc<=-17418) return 'H';
        if($asc>=-17417&&$asc<=-16475) return 'J';
        if($asc>=-16474&&$asc<=-16213) return 'K';
        if($asc>=-16212&&$asc<=-15641) return 'L';
        if($asc>=-15640&&$asc<=-15166) return 'M';
        if($asc>=-15165&&$asc<=-14923) return 'N';
        if($asc>=-14922&&$asc<=-14915) return 'O';
        if($asc>=-14914&&$asc<=-14631) return 'P';
        if($asc>=-14630&&$asc<=-14150) return 'Q';
        if($asc>=-14149&&$asc<=-14091) return 'R';
        if($asc>=-14090&&$asc<=-13319) return 'S';
        if($asc>=-13318&&$asc<=-12839) return 'T';
        if($asc>=-12838&&$asc<=-12557) return 'W';
        if($asc>=-12556&&$asc<=-11848) return 'X';
        if($asc>=-11847&&$asc<=-11056) return 'Y';
        if($asc>=-11055&&$asc<=-10247) return 'Z';
        return null;
    }

}